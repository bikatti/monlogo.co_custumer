//- text
section.o-textManual.-bg.-padBgBottom
 .m-textManual.-ContainerBlog
  .m-textManual__title
   .m-text__customer
    .m-text__linksBack.-mXsBottom
     +textLinksBack(monlogoInternos[4],"ðŸŒŒ", "Componentes del website")
     +textNoLinks("ðŸ”§", manualNames[0])
    h1.a-text__header #{manualNames[0]}
    .m-text__details
     .a-arrowWierd
     h3.a-text__textDetails #{atomic[0]}


  article.m-text__blog
   .m-text__section
    .m-text__sectionHeader
     .m-text__sectionHeaderText
      h3.a-text__title.-uppercase.-italic Nombre
    .m-text__div
     p Este es el nombre que se le darÃ¡ en el css y las clases para referirse al Ã¡tomo (elemento), en este caso contaremos con tres tipos de botones, sus nombres serÃ¡n:
     .-row
      .-col-4
       .m-codeCss
        p .a-btn .-btnPrimary
       +ImgTextContainer("", "-m-w50 -mAuto","", "", "assets/img/componentes/button-primary.png")
      .-col-4
       .m-codeCss
        p .a-btn .-btnSecondary
       +ImgTextContainer("", "-m-w50 -mAuto","", "", "assets/img/componentes/button-secondary.png")
      .-col-4
       .m-codeCss
        p .a-btn .-btnAlert
       +ImgTextContainer("", "-m-w50 -mAuto","", "", "assets/img/componentes/button-alert.png")
      .-col-4
       .m-codeCss
        p .a-btn .-btnMonlogo
       +ImgTextContainer("", "-m-w50 -mAuto","", "", "assets/img/componentes/button-monlogo.png")
     p El botÃ³n de la firma de Monlogo es igual al botÃ³n #[b.-medium .-btnSecondary] lo Ãºnico que puede variar en su separaciÃ³n y tamaÃ±o de la caja.

   .m-text__section
    .m-text__sectionHeader
     .m-text__sectionHeaderText
      h3.a-text__title.-uppercase.-italic DescripciÃ³n
    .m-text__alert
     .a-text__alert #[span.-iconAlerts ðŸ’¡]
     .m-text__warning
      p Para ver cuanto miden cada breakpoints ir a #[a.-colorAlert.-medium(href=linksDev[0], target="_blank") medidas de breakpoints]
    .m-text__div
     h3.-uppercase.-italic Desktop (breakpoints Xl y Lg)
     .-row
      .-col-4
       .m-codeCss
        p .-btnPrimary
       +ImgTextContainer("", "-m-w50 -mAuto","", "", "assets/img/componentes/button-primary.png")
      .-col-4
       .m-codeCss
        p .-btnSecondary
       +ImgTextContainer("", "-m-w50 -mAuto","", "", "assets/img/componentes/button-secondary.png")
      .-col-4
       .m-codeCss
        p .-btnAlert
       +ImgTextContainer("", "-m-w50 -mAuto","", "", "assets/img/componentes/button-alert.png")
     
    .m-text__div
     h3.-uppercase.-italic Tablet y TelÃ©fono (breakpoints Md, Sm, Xs, Xxs, X0)
     .-row
      .-col-4
       .m-codeCss
        p .-btnPrimary
       +ImgTextContainer("", "-m-w40 -mAuto","", "", "assets/img/componentes/button-primary-1.png")
      .-col-4
       .m-codeCss
        p .-btnSecondary
       +ImgTextContainer("", "-m-w40 -mAuto","", "", "assets/img/componentes/button-secondary-1.png")
      .-col-4
       .m-codeCss
        p .-btnAlert
       +ImgTextContainer("", "-m-w40 -mAuto","", "", "assets/img/componentes/button-alert-1.png")

   .m-text__section
    .m-text__sectionHeader
     .m-text__sectionHeaderText
      h3.a-text__title.-uppercase.-italic Estados
    p.-mXsBottom Los estados de un Ã¡tomo pueden variar como se comportarÃ¡ este cuando se encuentre en X situaciÃ³n. En este los estados que responderÃ¡n serÃ¡:
    .m-text__div
     .-row
      .-col-4
       p â†’ Default
       +ImgTextContainer("", "-m-w80 -mAuto","", "", "assets/img/componentes/button_example.png")
      .-col-4
       p â†’ :hover
       +ImgTextContainer("", "-m-w80 -mAuto","", "", "assets/img/componentes/button_example_hover.png")
      .-col-4
       p â†’ :active
       +ImgTextContainer("", "-m-w80 -mAuto","", "", "assets/img/componentes/button_example_active.png")
    .m-text__alert
     .a-text__alert #[span.-iconAlerts ðŸ’¡]
     .m-text__warning
      p En este caso se quiere imitar la manera en que reaccionan los botones en #[a.-colorAlert.-medium(href="https://florencebymills.com/", target="-blank") florencebymills.com] que tienen los botones